(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{399:function(n,s,e){n.exports=e.p+"assets/img/dockerarch.522cc966.png"},451:function(n,s,e){"use strict";e.r(s);var a=e(54),r=Object(a.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[n._v("#")]),n._v(" docker")]),n._v(" "),a("h2",{attrs:{id:"_4-docker-是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-docker-是什么"}},[n._v("#")]),n._v(" 4. Docker 是什么")]),n._v(" "),a("ul",[a("li",[n._v("Docker 属于 Linux 容器的一种封装，提供简单易用的容器使用接口。它是目前最流行的 Linux 容器解决方案。")]),n._v(" "),a("li",[n._v("Docker 将应用程序与该程序的依赖，打包在一个文件里面。运行这个文件，就会生成一个虚拟容器。程序在这个虚拟容器里运行，就好像在真实的物理机上运行一样")])]),n._v(" "),a("h2",{attrs:{id:"_5-docker-和-kvm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-docker-和-kvm"}},[n._v("#")]),n._v(" 5. docker 和 KVM")]),n._v(" "),a("ul",[a("li",[n._v("启动时间\n"),a("ul",[a("li",[n._v("Docker 秒级启动")]),n._v(" "),a("li",[n._v("KVM 分钟级启动")])])]),n._v(" "),a("li",[n._v("轻量级 容器镜像通常以 M 为单位，虚拟机以 G 为单位，容器资源占用小，要比虚拟要部署更快速\n"),a("ul",[a("li",[n._v("容器共享宿主机内核，系统级虚拟化，占用资源少，容器性能基本接近物理机")]),n._v(" "),a("li",[n._v("虚拟机需要虚拟化一些设备，具有完整的 OS,虚拟机开销大，因而降低性能，没有容器性能好")])])]),n._v(" "),a("li",[n._v("安全性\n"),a("ul",[a("li",[n._v("由于共享宿主机内核，只是进程隔离，因此隔离性和稳定性不如虚拟机，容器具有一定权限访问宿主机内核，存在一下安全隐患")])])]),n._v(" "),a("li",[n._v("使用要求\n"),a("ul",[a("li",[n._v("KVM 基于硬件的完全虚拟化，需要硬件 CPU 虚拟化技术支持")]),n._v(" "),a("li",[n._v("容器共享宿主机内核，可运行在主机的 Linux 的发行版，不用考虑 CPU 是否支持虚拟化技术")])])])]),n._v(" "),a("h2",{attrs:{id:"_6-docker-应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-docker-应用场景"}},[n._v("#")]),n._v(" 6. docker 应用场景")]),n._v(" "),a("ul",[a("li",[n._v("节省项目环境部署时间\n"),a("ul",[a("li",[n._v("单项目打包")]),n._v(" "),a("li",[n._v("整套项目打包")]),n._v(" "),a("li",[n._v("新开源技术")])])]),n._v(" "),a("li",[n._v("环境一致性")]),n._v(" "),a("li",[n._v("持续集成")]),n._v(" "),a("li",[n._v("微服务")]),n._v(" "),a("li",[n._v("弹性伸缩")])]),n._v(" "),a("h2",{attrs:{id:"_7-docker-体系结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-docker-体系结构"}},[n._v("#")]),n._v(" 7. Docker 体系结构")]),n._v(" "),a("ul",[a("li",[n._v("containerd 是一个守护进程，使用 runc 管理容器，向 Docker Engine 提供接口")]),n._v(" "),a("li",[n._v("shim 只负责管理一个容器")]),n._v(" "),a("li",[n._v("runC 是一个轻量级工具，只用来运行容器\n"),a("img",{attrs:{src:e(399),alt:"xxx"}})])]),n._v(" "),a("h2",{attrs:{id:"_8-docker-内部组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-docker-内部组件"}},[n._v("#")]),n._v(" 8. Docker 内部组件")]),n._v(" "),a("p",[n._v("namespaces 命名空间，Linux 内核提供的一种对进程资源隔离的机制，例如进程、网络、挂载等资源\ncgroups 控制组,linux 内核提供的一种限制进程资源的机制，例如 cpu 内存等资源\nunonFS 联合文件系统，支持将不同位置的目录挂载到同一虚拟文件系统，形成一种分层的模型")]),n._v(" "),a("h2",{attrs:{id:"_9-docker-安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-docker-安装"}},[n._v("#")]),n._v(" 9. docker 安装")]),n._v(" "),a("p",[n._v("docker 分为企业版(EE)和社区版(CE)\ndocker-ce\nhub.docker\n9.1 安装\nyum install -y yum-utils device-mapper-persistent-data lvm2\nyum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\nyum install docker-ce docker-ce-cli containerd.io -y\n9.2 启动\nsystemctl start docker\n9.3 查看 docker 版本\n$ docker version\n$ docker info\n9.4 卸载\ndocker info\nyum remove docker\nrm -rf /var/lib/docker")]),n._v(" "),a("h2",{attrs:{id:"_10-docker-架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-docker-架构"}},[n._v("#")]),n._v(" 10. Docker 架构")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("docker\n")])])]),a("h2",{attrs:{id:"_11-阿里云加速"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-阿里云加速"}},[n._v("#")]),n._v(" 11.阿里云加速")]),n._v(" "),a("p",[n._v("镜像仓库\n镜像加速器")]),n._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("mkdir")]),n._v(" -p /etc/docker\n"),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("tee")]),n._v(" /etc/docker/daemon.json "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<<-")]),a("span",{pre:!0,attrs:{class:"token string"}},[n._v('\'EOF\'\n{\n"registry-mirrors": ["https://fwvjnv59.mirror.aliyuncs.com"]\n}\nEOF')]),n._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 重载所有修改过的配置文件")]),n._v("\n\n//daemon-reload: 重新加载某个服务的配置文件\n"),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" systemctl daemon-reload\n"),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" systemctl restart docker\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br")])]),a("h2",{attrs:{id:"_12-image-镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-image-镜像"}},[n._v("#")]),n._v(" 12. image 镜像")]),n._v(" "),a("ul",[a("li",[n._v("Docker 把应用程序及其依赖，打包在 image 文件里面。只有通过这个文件，才能生成 Docker 容器")]),n._v(" "),a("li",[n._v("image 文件可以看作是容器的模板")]),n._v(" "),a("li",[n._v("Docker 根据 image 文件生成容器的实例")]),n._v(" "),a("li",[n._v("同一个 image 文件，可以生成多个同时运行的容器实例")]),n._v(" "),a("li",[n._v("镜像不是一个单一的文件，而是有多层")]),n._v(" "),a("li",[n._v("容器其实就是在镜像的最上面加了一层读写层，在运行容器里做的任何文件改动，都会写到这个读写层里。如果容器删除了，最上面的读写层也就删除了，改动也就丢失了")]),n._v(" "),a("li",[n._v("我们可以通过 docker history <ID/NAME> 查看镜像中各层内容及大小，每层对应着 Dockerfile 中的一条指令")])]),n._v(" "),a("table",[a("thead",[a("tr",[a("th",[n._v("命令")]),n._v(" "),a("th",[n._v("含义")]),n._v(" "),a("th",[n._v("语法")]),n._v(" "),a("th",[n._v("案例")])])]),n._v(" "),a("tbody",[a("tr",[a("td",[n._v("ls")]),n._v(" "),a("td",[n._v("查看全部镜像")]),n._v(" "),a("td",[n._v("docker image ls")]),n._v(" "),a("td")]),n._v(" "),a("tr",[a("td",[n._v("search")]),n._v(" "),a("td",[n._v("查找镜像")]),n._v(" "),a("td",[n._v("docker search [imageName]")]),n._v(" "),a("td")]),n._v(" "),a("tr",[a("td",[n._v("history")]),n._v(" "),a("td",[n._v("查看镜像历史")]),n._v(" "),a("td",[n._v("docker history [imageName]")]),n._v(" "),a("td")]),n._v(" "),a("tr",[a("td",[n._v("inspect")]),n._v(" "),a("td",[n._v("显示一个或多个镜像详细信息")]),n._v(" "),a("td",[n._v("docker inspect [imageName]")]),n._v(" "),a("td")]),n._v(" "),a("tr",[a("td",[n._v("pull")]),n._v(" "),a("td",[n._v("拉取镜像")]),n._v(" "),a("td",[n._v("docker pull [imageName]")]),n._v(" "),a("td")]),n._v(" "),a("tr",[a("td",[n._v("push")]),n._v(" "),a("td",[n._v("推送一个镜像到镜像仓库")]),n._v(" "),a("td",[n._v("docker push [imageName]")]),n._v(" "),a("td")]),n._v(" "),a("tr",[a("td",[n._v("rmi")]),n._v(" "),a("td",[n._v("删除镜像")]),n._v(" "),a("td",[n._v("docker rmi [imageName] docker image rmi 2")]),n._v(" "),a("td")]),n._v(" "),a("tr",[a("td",[n._v("prune")]),n._v(" "),a("td",[n._v("移除未使用的镜像，没有标记或补任何容器引用")]),n._v(" "),a("td",[n._v("docker image prune")]),n._v(" "),a("td",[n._v("docker image prune")])]),n._v(" "),a("tr",[a("td",[n._v("tag")]),n._v(" "),a("td",[n._v("标记本地镜像，将其归入某一仓库")]),n._v(" "),a("td",[n._v("docker tag [OPTIONS] IMAGE[:TAG] [REGISTRYHOST/][username/]NAME[:TAG]")]),n._v(" "),a("td",[n._v("docker tag centos:7 zhangrenyang/centos:v1")])]),n._v(" "),a("tr",[a("td",[n._v("export")]),n._v(" "),a("td",[n._v("将容器文件系统作为一个 tar 归档文件导出到 STDOUT")]),n._v(" "),a("td",[n._v("docker export [OPTIONS] CONTAINER")]),n._v(" "),a("td",[n._v("docker export -o hello-world.tar b2712f1067a3")])]),n._v(" "),a("tr",[a("td",[n._v("import")]),n._v(" "),a("td",[n._v("导入容器快照文件系统 tar 归档文件并创建镜像")]),n._v(" "),a("td",[n._v("docker import [OPTIONS] file/URL/- [REPOSITORY[:TAG]]")]),n._v(" "),a("td",[n._v("docker import hello-world.tar")])]),n._v(" "),a("tr",[a("td",[n._v("save")]),n._v(" "),a("td",[n._v("将指定镜像保存成 tar 文件")]),n._v(" "),a("td",[n._v("docker save [OPTIONS] IMAGE [IMAGE...]")]),n._v(" "),a("td",[n._v("docker save -o hello-world.tar hello-world:latest")])]),n._v(" "),a("tr",[a("td",[n._v("load")]),n._v(" "),a("td",[n._v("加载 tar 文件并创建镜像")]),n._v(" "),a("td"),n._v(" "),a("td",[n._v("docker load -i hello-world.tar")])]),n._v(" "),a("tr",[a("td",[n._v("build")]),n._v(" "),a("td",[n._v("根据 Dockerfile 构建镜像")]),n._v(" "),a("td",[n._v("docker build [OPTIONS] PATH / URL / -")]),n._v(" "),a("td",[n._v("docker build -t zf/ubuntu:v1 .")])])])]),n._v(" "),a("ul",[a("li",[n._v("用户既可以使用 docker load 来导入镜像存储文件到本地镜像库，也可以使用 docker import 来导入一个容器快照到本地镜像库")]),n._v(" "),a("li",[n._v("这两者的区别在于容器(import)快照文件将丢弃所有的历史记录和元数据信息（即仅保存容器当时的快照状态），而镜像(load)存储文件将保存完整记录，体积也要大")]),n._v(" "),a("li",[n._v("此外，从容器(import)快照文件导入时可以重新指定标签等元数据信息")])]),n._v(" "),a("h2",{attrs:{id:"_12-1-查看镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-查看镜像"}},[n._v("#")]),n._v(" 12.1 查看镜像")]),n._v(" "),a("p",[n._v("docker image ls\n字段 含义\nREPOSITORY 仓库地址\nTAG 标签\nIMAGE_ID 镜像 ID\nCREATED 创建时间\nSIZE 镜像大小\n12.2 查找镜像\ndocker search ubuntu\n字段 含义\nNAME 名称\nDESCRIPTION 描述\nSTARTS 星星的数量\nOFFICIAL 是否官方源\n12.3 拉取镜像\ndocker pull docker.io/hello-world\ndocker image pull 是抓取 image 文件的命令\ndocker.io/hello-world 是 image 文件在仓库里面的位置，其中 docker.io 是 image 的作者，hello-world 是 image 文件的名字\nDocker 官方提供的 image 文件，都放在 docker.io 组里面，所以它的是默认组，可以省略 docker image pull hello-world\n12.4 删除镜像\ndocker rmi hello-world\n12.5 export\n将容器文件系统作为一个 tar 归档文件导出到 STDOUT\ndocker export -o hello-world.tar b2712f1067a3\n12.6 import\ndocker import hello-world.tar\n12.7 save\ndocker save -o hello-world.tar hello-world:latest\n12.8 load\ndocker load -i hello-world.tar")]),n._v(" "),a("h2",{attrs:{id:"_13-容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-容器"}},[n._v("#")]),n._v(" 13. 容器")]),n._v(" "),a("ul",[a("li",[n._v("docker run 命令会从 image 文件，生成一个正在运行的容器实例。")]),n._v(" "),a("li",[n._v("docker container run 命令具有自动抓取 image 文件的功能。如果发现本地没有指定的 image 文件，就会从仓库自动抓取")]),n._v(" "),a("li",[n._v("输出提示以后，hello world 就会停止运行，容器自动终止。")]),n._v(" "),a("li",[n._v("有些容器不会自动终止")]),n._v(" "),a("li",[n._v("image 文件生成的容器实例，本身也是一个文件，称为容器文件")]),n._v(" "),a("li",[n._v("容器生成，就会同时存在两个文件： image 文件和容器文件")]),n._v(" "),a("li",[n._v("关闭容器并不会删除容器文件，只是容器停止运行")])]),n._v(" "),a("h2",{attrs:{id:"_13-1-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-命令"}},[n._v("#")]),n._v(" 13.1 命令")]),n._v(" "),a("table",[a("thead",[a("tr",[a("th",[n._v("命令")]),n._v(" "),a("th",[n._v("含义")]),n._v(" "),a("th",[n._v("案例")])])]),n._v(" "),a("tbody",[a("tr",[a("td",[n._v("run")]),n._v(" "),a("td",[n._v("从镜像运行一个容器")]),n._v(" "),a("td",[n._v("docker run ubuntu /bin/echo 'hello-world'")])]),n._v(" "),a("tr",[a("td",[n._v("ls")]),n._v(" "),a("td",[n._v("列出容器")]),n._v(" "),a("td",[n._v("docker container ls")])]),n._v(" "),a("tr",[a("td",[n._v("inspect")]),n._v(" "),a("td",[n._v("显示一个或多个容器详细信息")]),n._v(" "),a("td",[n._v("docker inspect")])]),n._v(" "),a("tr",[a("td",[n._v("attach")]),n._v(" "),a("td",[n._v("要 attach 上去的容器必须正在运行，可以同时连接上同一个 container 来共享屏幕 docker attach [OPTIONS] CONTAINER docker attach 6d1a25f95132")]),n._v(" "),a("td")]),n._v(" "),a("tr",[a("td",[n._v("stats")]),n._v(" "),a("td",[n._v("显示容器资源使用统计")]),n._v(" "),a("td",[n._v("docker container stats")])]),n._v(" "),a("tr",[a("td",[n._v("top")]),n._v(" "),a("td",[n._v("显示一个容器运行的进程")]),n._v(" "),a("td",[n._v("docker container top")])]),n._v(" "),a("tr",[a("td",[n._v("update")]),n._v(" "),a("td",[n._v("更新一个或多个容器配置")]),n._v(" "),a("td",[n._v("docker update -m 500m --memory-swap -1 6d1a25f95132")])]),n._v(" "),a("tr",[a("td",[n._v("port")]),n._v(" "),a("td",[n._v("列出指定的容器的端口映射")]),n._v(" "),a("td",[n._v("docker run -d -p 8080:80 nginx docker container port containerID")])]),n._v(" "),a("tr",[a("td",[n._v("ps")]),n._v(" "),a("td",[n._v("查看当前运行的容器")]),n._v(" "),a("td",[n._v("docker ps -a -l")])]),n._v(" "),a("tr",[a("td",[n._v("kill [containerId]")]),n._v(" "),a("td",[n._v("终止容器(发送 SIGKILL )")]),n._v(" "),a("td",[n._v("docker kill [containerId]")])]),n._v(" "),a("tr",[a("td",[n._v("rm [containerId]")]),n._v(" "),a("td",[n._v("删除容器")]),n._v(" "),a("td",[n._v("docker rm [containerId]")])]),n._v(" "),a("tr",[a("td",[n._v("start [containerId]")]),n._v(" "),a("td",[n._v("启动已经生成、已经停止运行的容器文件")]),n._v(" "),a("td",[n._v("docker start [containerId]")])]),n._v(" "),a("tr",[a("td",[n._v("stop [containerId]")]),n._v(" "),a("td",[n._v("终止容器运行 (发送 SIGTERM )")]),n._v(" "),a("td",[n._v("docker stop [containerId] docker container stop $(docker container ps -aq)")])]),n._v(" "),a("tr",[a("td",[n._v("logs [containerId]")]),n._v(" "),a("td",[n._v("查看 docker 容器的输出")]),n._v(" "),a("td",[n._v("docker logs [containerId]")])]),n._v(" "),a("tr",[a("td",[n._v("exec [containerId]")]),n._v(" "),a("td",[n._v("进入一个正在运行的 docker 容器执行命令")]),n._v(" "),a("td",[n._v("docker container exec -it f6a53629488b /bin/bash")])]),n._v(" "),a("tr",[a("td",[n._v("cp [containerId]")]),n._v(" "),a("td",[n._v("从正在运行的 Docker 容器里面，将文件拷贝到本机")]),n._v(" "),a("td",[n._v("docker container cp f6a53629488b:/root/root.txt .")])]),n._v(" "),a("tr",[a("td",[n._v("commit [containerId]")]),n._v(" "),a("td",[n._v("根据一个现有容器创建一个新的镜像")]),n._v(" "),a("td",[n._v('docker commit -a "zhufeng" -m "mynginx" a404c6c174a2 mynginx:v1')])])])]),n._v(" "),a("p",[n._v('docker 容器的主线程（dockfile 中 CMD 执行的命令）结束，容器会退出\n以使用交互式启动 docker run -i [CONTAINER_NAME or CONTAINER_ID]\ntty 选项 docker run -dit [CONTAINER_NAME or CONTAINER_ID]\n守护态（Daemonized）形式运行 docker run -d ubuntu /bin/sh -c "while true; do echo hello world; sleep 1; done"')]),n._v(" "),a("h2",{attrs:{id:"_13-2-启动容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-启动容器"}},[n._v("#")]),n._v(" 13.2 启动容器")]),n._v(" "),a("p",[n._v('docker run ubuntu /bin/echo "Hello world"\ndocker: Docker 的二进制执行文件。\nrun:与前面的 docker 组合来运行一个容器。\nubuntu 指定要运行的镜像，Docker 首先从本地主机上查找镜像是否存在，如果不存在，Docker 就会从镜像仓库 Docker Hub 下载公共镜像。\n/bin/echo "Hello world": 在启动的容器里执行的命令\nDocker 以 ubuntu 镜像创建一个新容器，然后在容器里执行 bin/echo "Hello world"，然后输出结果')]),n._v(" "),a("p",[n._v('Docker attach 必须是登陆到一个已经运行的容器里。需要注意的是如果从这个容器中 exit 退出的话，就会导致容器停止\n参数 含义\n-i --interactive 交互式\n-t --tty 分配一个伪终端\n-d --detach 运行容器到后台\n-a --attach list 附加到运行的容器\n-e --env list 设置环境变量 docker run -d -p 1010:80 -e username="zhufeng" nginx \\ docker container exec -it 3695dc5b9c2d /bin/bash\n-p --publish list 发布容器端口到主机\n-P --publish-all\n13.3 查看容器\ndocker ps\ndocker -a\ndocker -l\n-a 显示所有的容器，包括已停止的\n-l 显示最新的那个容器\n字段 含义\nCONTAINER ID 容器 ID\nIMAGE 使用的镜像\nCOMMAND 使用的命令\nCREATED 创建时间\nSTATUS 状态\nPORTS 端口号\nNAMES 自动分配的名称\n13.4 运行交互式的容器\ndocker run -i -t ubuntu /bin/bash\nexit\n-t=--interactive 在新容器内指定一个伪终端或终端。\n-i=--tty 允许你对容器内的标准输入 (STDIN) 进行交互。\n我们可以通过运行 exit 命令或者使用 CTRL+D 来退出容器。')]),n._v(" "),a("p",[n._v("13.5 后台运行容器\ndocker run --detach centos ping www.baidu.com\ndocker ps\ndocker logs --follow ad04d9acde94\ndocker stop ad04d9acde94\n13.6 kill\ndocker kill 5a5c3a760f61\nkill 是不管容器同不同意，直接执行 kill -9，强行终止；stop 的话，首先给容器发送一个 TERM 信号，让容器做一些退出前必须的保护性、安全性操作，然后让容器自动停止运行，如果在一段时间内，容器还是没有停止，再进行 kill -9，强行终止")]),n._v(" "),a("p",[n._v('13.7 删除容器\ndocker rm 删除容器\ndocker rmi 删除镜像\ndocker rm $(docker ps -a -q)\ndocker rm 5a5c3a760f61\n13.8 启动容器\ndocker start [containerId]\n13.9 停止容器\ndocker stop [containerId]\n13.10 进入一个容器\ndocker attach [containerID]\n13.11 进入一个正在运行中的容器\ndocker container -exec -it [containerID] /bin/bash\n13.12 拷贝文件\ndocker container cp [containerID]/readme.md .\n13.13 自动删除\ndocker run --rm ubuntu /bin/bash\n13.14 stats\n显示容器资源使用统计\ndocker container stats\n13.15 top\n显示一个容器运行的进程\ndocker container top\n13.16 update\n更新一个或多个容器配置\ndocker update -m 500m 6d1a25f95132\n13.17 port\n列出指定的容器的端口映射\ndocker run -d -p 8080:80 nginx\ndocker container port containerID\n13.18 logs\n查看 docker 容器的输出\ndocker logs [containerId] 14. commit 制作个性化镜像\ndocker commit :从容器创建一个新的镜像。\ndocker commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]]\n-a :提交的镜像作者\n-c :使用 Dockerfile 指令来创建镜像\n-m :提交时的说明文字\n-p :在 commit 时，将容器暂停\n停止容器后不会自动删除这个容器，除非在启动容器的时候指定了 --rm 标志\n使用 docker ps -a 命令查看 Docker 主机上包含停止的容器在内的所有容器\n停止状态的容器的可写层仍然占用磁盘空间。要清理可以使用 docker container prune 命令\ndocker container commit -m"我的 nginx" -a"zhangrenyang" 3695dc5b9c2d zhangrenyang/mynginx:v1\ndocker image ls\ndocker container run zhangrenyang/mynginx /bin/bash\ndocker container rm b2839066c362\ndocker container prune\ndocker image rmi c79ef5b3f5fc 15. 制作 Dockerfile\nDocker 的镜像是用一层一层的文件组成的\ndocker inspect 命令可以查看镜像或者容器\nLayers 就是镜像的层文件，只读不能修改。基于镜像创建的容器会共享这些文件层\ndocker inspect centos\n15.1 编写 Dockerfile\n-t --tag list 镜像名称\n-f --file string 指定 Dockerfile 文件的位置\n指令 含义 示例\nFROM 构建的新镜像是基于哪个镜像 FROM centos:6\nMAINTAINER 镜像维护者姓名或邮箱地址 MAINTAINER zhufengjiagou\nRUN 构建镜像时运行的 shell 命令 RUN yum install httpd\nCMD CMD 设置容器启动后默认执行的命令及其参数，但 CMD 能够被 docker run 后面跟的命令行参数替换 CMD /usr/sbin/sshd -D\nEXPOSE 声明容器运行的服务器端口 EXPOSE 80 443\nENV 设置容器内的环境变量 ENV MYSQL_ROOT_PASSWORD 123456\nADD 拷贝文件或目录到镜像中，如果是 URL 或者压缩包会自动下载和解压 ADD ,ADD https://xxx.com/html.tar.gz /var/www.html, ADD html.tar.gz /var/www/html\nCOPY 拷贝文件或目录到镜像 COPY ./start.sh /start.sh\nENTRYPOINT 配置容器启动时运行的命令 ENTRYPOINT /bin/bash -c \'/start.sh\'\nVOLUME 指定容器挂载点到宿主自动生成的目录或其它容器 VOLUME ["/var/lib/mysql"]\nUSER 为 RUN CMD 和 ENTRYPOINT 执行命令指定运行用户 USER zhufengjiagou\nWORKDIR 为 RUN CMD ENTRYPOINT COPY ADD 设置工作目录 WORKDIR /data\nHEALTHCHECK 健康检查 HEALTHCHECK --interval=5m --timeout=3s --retries=3 CMS curl -f htp://localhost\nARG 在构建镜像时指定一些参数 ARG user\ncmd 给出的是一个容器的默认的可执行体。也就是容器启动以后，默认的执行的命令。重点就是这个"默认"。意味着，如果 docker run 没有指定任何的执行命令或者 dockerfile 里面也没有 entrypoint，那么，就会使用 cmd 指定的默认的执行命令执行。同时也从侧面说明了 entrypoint 的含义，它才是真正的容器启动以后要执行命令\n15.2 .dockerignore\n表示要排除，不要打包到 image 中的文件路径')]),n._v(" "),a("p",[n._v(".git\nnode_modules\n15.3 Dockerfile\n15.3.1 安装 node\nnvm\nwget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash\nsource /root/.bashrc\nnvm install stable\nnode -v\nnpm config set registry https://registry.npm.taobao.org\nnpm i cnpm -g --registry https://registry.npm.taobao.org\nnpm i nrm -g --registry https://registry.npm.taobao.org\n15.3.2 安装 express 项目生成器\nnpm install express-generator -g\nexpress app\n15.3.3 Dockerfile\nFROM node\nCOPY ./app /app\nWORKDIR /app\nRUN npm install\nEXPOSE 3000\nFROM 表示该镜像继承的镜像 :表示标签\nCOPY 是将当前目录下的 app 目录下面的文件都拷贝到 image 里的/app 目录中\nWORKDIR 指定工作路径，类似于执行 cd 命令\nRUN npm install 在/app 目录下安装依赖，安装后的依赖也会打包到 image 目录中\nEXPOSE 暴露 3000 端口，允许外部连接这个端口\n15.4 创建 image\ndocker build -t express-demo .\n-t 用来指定 image 镜像的名称，后面还可以加冒号指定标签，如果不指定默认就是 latest\n. 表示 Dockerfile 文件的所有路径,.就表示当前路径\n15.5 使用新的镜像运行容器\ndocker container run -p 3333:3000 -it express-demo /bin/bash\nnpm start\n-p 参数是将容器的 3000 端口映射为本机的 3333 端口\n-it 参数是将容器的 shell 容器映射为当前的 shell,在本机容器中执行的命令都会发送到容器当中执行\nexpress-demo image 的名称\n/bin/bash 容器启动后执行的第一个命令,这里是启动了 bash 容器以便执行脚本\n--rm 在容器终止运行后自动删除容器文件\n15.6 CMD\nDockerfile")]),n._v(" "),a("ul",[a("li",[n._v("CMD npm start\n重新制作镜像")])]),n._v(" "),a("p",[n._v("docker build -t express-demo .\ndocker container run -p 3333:3000 express-demo\nRUN 命令在 image 文件的构建阶段执行，执行结果都会打包进入 image 文件；CMD 命令则是在容器启动后执行\n一个 Dockerfile 可以包含多个 RUN 命令，但是只能有一个 CMD 命令\n指定了 CMD 命令以后，docker container run 命令就不能附加命令了（比如前面的/bin/bash），否则它会覆盖 CMD 命令\n15.7 发布 image\n注册账户\n83687401 Abc\ndocker tag SOURCE_IMAGE[:TAG] TARGET_IMAGE[:TAG]\ndocker login\ndocker image tag [imageName] [username]/[repository]:[tag]\ndocker image build -t [username]/[repository]:[tag] .")]),n._v(" "),a("p",[n._v("docker tag express-demo zhangrenyang/express-demo:v1\ndocker push zhangrenyang/express-demo:v1 16. 数据盘\n删除容器的时候，容器层里创建的文件也会被删除掉，如果有些数据你想永久保存，比如 Web 服务器的日志，数据库管理系统中的数据，可以为容器创建一个数据盘\nbindmount")]),n._v(" "),a("p",[n._v("16.1 volume\nvolumes Docker 管理宿主机文件系统的一部分(/var/lib/docker/volumes)\n如果没有指定卷，则会自动创建\n建议使用--mount ,更通用\n16.1.1 创建数据卷\ndocker volume --help\ndocker volume create nginx-vol\ndocker volume ls\ndocker volume inspect nginx-vol #把 nginx-vol 数据卷挂载到/usr/share/nginx/html,挂载后容器内的文件会同步到数据卷中\ndocker run -d --name=nginx1 --mount src=nginx-vol,dst=/usr/share/nginx/html nginx\ndocker run -d --name=nginx2 -v nginx-vol:/usr/share/nginx/html -p 3000:80 nginx\n16.1.2 删除数据卷\ndocker container stop nginx1 停止容器\ndocker container rm nginx1 删除容器\ndocker volume rm nginx-vol 删除数据库")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('16.1.3 管理数据盘\ndocker volume ls #列出所有的数据盘\ndocker volume ls -f dangling=true #列出已经孤立的数据盘\ndocker volume rm xxxx #删除数据盘\ndocker volume ls #列出数据盘\n16.2 Bind mounts\n此方式与 Linux 系统的 mount 方式很相似，即是会覆盖容器内已存在的目录或文件，但并不会改变容器内原有的文件，当 umount 后容器内原有的文件就会还原\n创建容器的时候我们可以通过-v 或--volumn 给它指定一下数据盘\nbind mounts 可以存储在宿主机系统的任意位置\n如果源文件/目录不存在，不会自动创建，会抛出一个错误\n如果挂载目标在容器中非空目录，则该目录现有内容将被隐藏\n16.2.1 默认数据盘\n-v 参数两种挂载数据方式都可以用\ndocker run -v /mnt:/mnt -it --name logs centos bash\ncd /mnt\necho 1 > 1.txt\nexit\ndocker inspect logs\n"Mounts": [\n{\n"Source":"/mnt/sda1/var/lib/docker/volumes/dea6a8b3aefafa907d883895bbf931a502a51959f83d63b7ece8d7814cf5d489/_data",\n"Destination": "/mnt",\n}\n]\nSource 的值就是我们给容器指定的数据盘在主机上的位置\nDestination 的值是这个数据盘在容器上的位置\n16.2.2 指定数据盘\nmkdir ~/data\ndocker run -v ~/data:/mnt -it --name logs2 centos bash\ncd /mnt\necho 3 > 3.txt\nexit\ncat ~/data/3.txt\n~/data:/mnt 把当前用户目录中的 data 目录映射到/mnt 上\n16.2.3 指定数据盘容器\ndocker create [OPTIONS] IMAGE [COMMAND] [ARG...] 创建一个新的容器但不启动\ndocker create -v /mnt:/mnt --name logger centos\ndocker run --volumes-from logger --name logger3 -i -t centos bash\ncd /mnt\ntouch logger3\ndocker run --volumes-from logger --name logger4 -i -t centos bash\ncd /mnt\ntouch logger4 17. 网络\n安装 Docker 时，它会自动创建三个网络，bridge（创建容器默认连接到此网络）、 none 、host\nNone：该模式关闭了容器的网络功能,对外界完全隔离\nhost：容器将不会虚拟出自己的网卡，配置自己的 IP 等，而是使用宿主机的 IP 和端口。\nbridge 桥接网络，此模式会为每一个容器分配 IP\n可以使用该--network 标志来指定容器应连接到哪些网络\n17.1 bridge(桥接)\nbridge 网络代表所有 Docker 安装中存在的网络\n除非你使用该 docker run --network=<NETWORK>选项指定，否则 Docker 守护程序默认将容器连接到此网络\nbridge 模式使用 --net=bridge 指定，默认设置\ndocker network ls #列出当前的网络\ndocker inspect bridge #查看当前的桥连网络\ndocker run -d --name nginx1 nginx\ndocker run -d --name nginx2 --link nginx1 nginx\ndocker exec -it nginx2 bash\napt update\napt install -y inetutils-ping #ping\napt install -y dnsutils #nslookup\napt install -y net-tools #ifconfig\napt install -y iproute2 #ip\napt install -y curl #curl\ncat /etc/hosts\nping nginx1\n17.2 none\nnone 模式使用--net=none 指定\n\n# --net 指定无网络\n\ndocker run -d --name nginx_none --net none nginx\ndocker inspect none\ndocker exec -it nginx_none bash\nip addr\n17.3 host\nhost 模式使用 --net=host 指定\ndocker run -d --name nginx_host --net host nginx\ndocker inspect host\ndocker exec -it nginx_host bash\nip addr\n17.4 端口映射\n\n# 查看镜像里暴露出的端口号\n\ndocker image inspect nginx\n"ExposedPorts": {"80/tcp": {}}\n\n# 让宿主机的 8080 端口映射到 docker 容器的 80 端口\n\ndocker run -d --name port_nginx -p 8080:80 nginx\n\n# 查看主机绑定的端口\n\ndocker container port port_nginx\n17.5 指向主机的随机端口\ndocker run -d --name random_nginx --publish 80 nginx\ndocker port random_nginx\n\ndocker run -d --name randomall_nginx --publish-all nginx\ndocker run -d --name randomall_nginx --P nginx\n17.6 创建自定义网络\n可以创建多个网络，每个网络 IP 范围均不相同\ndocker 的自定义网络里面有一个 DNS 服务，可以通过容器名称访问主机\n\n# 创建自定义网络\n\ndocker network create --driver bridge myweb\n\n# 查看自定义网络中的主机\n\ndocker network inspect myweb\n\n# 创建容器的时候指定网络\n\ndocker run -d --name mynginx1 --net myweb nginx\ndocker run -d --name mynginx2 --net myweb nginx\ndocker exec -it mynginx2 bash\nping mynginx1\n17.7 连接到指定网络\ndocker run -d --name mynginx3 nginx\ndocker network connect myweb mynginx3\ndocker network disconnect myweb mynginx3\n17.8 移除网络\ndocker network rm myweb\n18.compose\nCompose 通过一个配置文件来管理多个 Docker 容器\n在配置文件中，所有的容器通过 services 来定义，然后使用 docker-compose 脚本来启动、停止和重启应用和应用中的服务以及所有依赖服务的容器\n步骤：\n最后，运行 docker-compose up，Compose 将启动并运行整个应用程序 配置文件组成\nservices 可以定义需要的服务，每个服务都有自己的名字、使用的镜像、挂载的数据卷所属的网络和依赖的其它服务\nnetworks 是应用的网络，在它下面可以定义使用的网络名称，类性\nvolumes 是数据卷，可以在此定义数据卷，然后挂载到不同的服务上面使用\n18.1 安装 compose\nyum -y install epel-release\nyum -y install python-pip\nyum clean all\npip install docker-compose\nsudo curl -L "https://github.com/docker/compose/releases/download/1.25.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose\n\n# 添加可执行权限\n\nsudo chmod +x /usr/local/bin/docker-compose\n\n# 查看版本信息\n\ndocker-compose -versio\n18.2 编写 docker-compose.yml\n在 docker-compose.yml 中定义组成应用程序的服务，以便它们可以在隔离的环境中一起运行\n空格缩进表示层次\n冒号空格后面有空格\ndocker-compose.yml\n\nversion: \'2\'\nservices:\nnginx1:\nimage: nginx\nports: - "8080:80"\nnginx2:\nimage: nginx\nports: - "8081:80"\n18.3 启动服务\ndocker 会创建默认的网络\n命令 服务\ndocker-compose up 启动所有的服务\ndocker-compose up -d 后台启动所有的服务\ndocker-compose ps 打印所有的容器\ndocker-compose stop 停止所有服务\ndocker-compose logs -f 持续跟踪日志\ndocker-compose exec nginx1 bash 进入 nginx1 服务系统\ndocker-compose rm nginx1 删除服务容器\ndocker network ls 查看网络网络不会删除\ndocker-compose down 删除所有的网络和容器\n删除所有的容器 docker container rm docker container ps -a -q\n\n18.4 网络互 ping\ndocker-compose up -d\ndocker-compose exec nginx1 bash\napt update && apt install -y inetutils-ping #可以通过服务的名字连接到对方\nping nginx2\n18.5 配置数据卷\nnetworks 指定自定义网络\nvolumes 指定数据卷\n数据卷在宿主机的位置 /var/lib/docker/volumes/nginx-compose_data/\\_data\nversion: \'3\'\nservices:\nnginx1:\nimage: nginx\nports: - "8081:80"\nnetworks: - "newweb"\nvolumes: - "data:/data" - "./nginx1:/usr/share/nginx/html"\nnginx2:\nimage: nginx\nports: - "8082:80"\nnetworks: - "default"\nvolumes: - "data:/data" - "./nginx2:/usr/share/nginx/html"\nnginx3:\nimage: nginx\nports: - "8083:80"\nnetworks: - "default" - "newweb"\nvolumes: - "data:/data" - "./nginx3:/usr/share/nginx/html"\nnetworks:\nnewweb:\ndriver: bridge\nvolumes:\ndata:\ndriver: local\ndocker exec nginx-compose_nginx1_1 bash\ncd /data\ntouch 1.txt\nexit\ncd /var/lib/docker/volumes/nginx-compose_data/\\_data\nls 19. node 项目\nnodeapp 是一个用 Docker 搭建的本地 Node.js 应用开发与运行环境。\n19.1 服务分类\ndb：使用 mariadb 作为应用的数据库\nnode：启动 node 服务\nweb：使用 nginx 作为应用的 web 服务器\n19.2 app 目录结构\n文件 说明\ndocker-compose.yml 定义本地开发环境需要的服务\nimages/nginx/config/default.conf nginx 配置文件\nimages/node/Dockerfile node 的 Dockfile 配置文件\nimages/node/web/package.json 项目文件\nimages/node/web/public/index.html 静态首页\nimages/node/web/server.js node 服务\n├── docker-compose.yml\n└── images\n├── nginx\n│ └── config\n│ └── default.conf\n└── node\n├── Dockerfile\n└── web\n├── package.json\n├── public\n│ └── index.html\n└── server.js\n19.2.1 docker-compose.yml\nversion: \'2\'\nservices:\nnode:\nbuild:\ncontext: ./images/node\ndockerfile: Dockerfile\ndepends_on:\n\n- db\n  web:\n  image: nginx\n  ports:\n- "8080:80"\n  volumes:\n- ./images/nginx/config:/etc/nginx/conf.d\n- ./images/node/web/public:/public\n  depends_on:\n- node\n  db:\n  image: mariadb\n  environment:\n  MYSQL_ROOT_PASSWORD: "root"\n  MYSQL_DATABASE: "node"\n  MYSQL_USER: "zfpx"\n  MYSQL_PASSWORD: "123456"\n  volumes:\n- db:/var/lib/mysql\n  volumes:\n  db:\n  driver: local\n  19.2.2 server.js\n  images/node/web/server.js\n\nlet http=require(\'http\');\nvar mysql = require(\'mysql\');\nvar connection = mysql.createConnection({\nhost : \'db\',\nuser : \'zfpx\',\npassword : \'123456\',\ndatabase : \'node\'\n});\n\nconnection.connect();\n\nlet server=http.createServer(function (req,res) {\nconnection.query(\'SELECT 2 + 2 AS solution\', function (error, results, fields) {\nif (error) throw error;\nres.end(\'\'+results[0].solution);\n});\n});\nserver.listen(3000);\n19.2.3 package.json\nimages/node/web/package.json\n\n{\n"scripts": {\n"start": "node server.js"\n},\n"dependencies": {\n"mysql": "^2.16.0"\n}\n19.2.4 images/node/Dockerfile\nFROM node\nMAINTAINER zhangrenyang <zhang_renyang@126.com>\nCOPY ./web /web\nWORKDIR /web\nRUN npm install\nCMD npm start\n19.2.5 images/nginx/config/default.conf\nupstream backend {\nserver node:3000;\n}\nserver {\nlisten 80;\nserver_name localhost;\nroot /public;\nindex index.html index.htm;\n\n    location /api {\n        proxy_pass http://backend;\n    }\n\n} 20. 参考 #\nyaml\nmysql\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br"),a("span",{staticClass:"line-number"},[n._v("63")]),a("br"),a("span",{staticClass:"line-number"},[n._v("64")]),a("br"),a("span",{staticClass:"line-number"},[n._v("65")]),a("br"),a("span",{staticClass:"line-number"},[n._v("66")]),a("br"),a("span",{staticClass:"line-number"},[n._v("67")]),a("br"),a("span",{staticClass:"line-number"},[n._v("68")]),a("br"),a("span",{staticClass:"line-number"},[n._v("69")]),a("br"),a("span",{staticClass:"line-number"},[n._v("70")]),a("br"),a("span",{staticClass:"line-number"},[n._v("71")]),a("br"),a("span",{staticClass:"line-number"},[n._v("72")]),a("br"),a("span",{staticClass:"line-number"},[n._v("73")]),a("br"),a("span",{staticClass:"line-number"},[n._v("74")]),a("br"),a("span",{staticClass:"line-number"},[n._v("75")]),a("br"),a("span",{staticClass:"line-number"},[n._v("76")]),a("br"),a("span",{staticClass:"line-number"},[n._v("77")]),a("br"),a("span",{staticClass:"line-number"},[n._v("78")]),a("br"),a("span",{staticClass:"line-number"},[n._v("79")]),a("br"),a("span",{staticClass:"line-number"},[n._v("80")]),a("br"),a("span",{staticClass:"line-number"},[n._v("81")]),a("br"),a("span",{staticClass:"line-number"},[n._v("82")]),a("br"),a("span",{staticClass:"line-number"},[n._v("83")]),a("br"),a("span",{staticClass:"line-number"},[n._v("84")]),a("br"),a("span",{staticClass:"line-number"},[n._v("85")]),a("br"),a("span",{staticClass:"line-number"},[n._v("86")]),a("br"),a("span",{staticClass:"line-number"},[n._v("87")]),a("br"),a("span",{staticClass:"line-number"},[n._v("88")]),a("br"),a("span",{staticClass:"line-number"},[n._v("89")]),a("br"),a("span",{staticClass:"line-number"},[n._v("90")]),a("br"),a("span",{staticClass:"line-number"},[n._v("91")]),a("br"),a("span",{staticClass:"line-number"},[n._v("92")]),a("br"),a("span",{staticClass:"line-number"},[n._v("93")]),a("br"),a("span",{staticClass:"line-number"},[n._v("94")]),a("br"),a("span",{staticClass:"line-number"},[n._v("95")]),a("br"),a("span",{staticClass:"line-number"},[n._v("96")]),a("br"),a("span",{staticClass:"line-number"},[n._v("97")]),a("br"),a("span",{staticClass:"line-number"},[n._v("98")]),a("br"),a("span",{staticClass:"line-number"},[n._v("99")]),a("br"),a("span",{staticClass:"line-number"},[n._v("100")]),a("br"),a("span",{staticClass:"line-number"},[n._v("101")]),a("br"),a("span",{staticClass:"line-number"},[n._v("102")]),a("br"),a("span",{staticClass:"line-number"},[n._v("103")]),a("br"),a("span",{staticClass:"line-number"},[n._v("104")]),a("br"),a("span",{staticClass:"line-number"},[n._v("105")]),a("br"),a("span",{staticClass:"line-number"},[n._v("106")]),a("br"),a("span",{staticClass:"line-number"},[n._v("107")]),a("br"),a("span",{staticClass:"line-number"},[n._v("108")]),a("br"),a("span",{staticClass:"line-number"},[n._v("109")]),a("br"),a("span",{staticClass:"line-number"},[n._v("110")]),a("br"),a("span",{staticClass:"line-number"},[n._v("111")]),a("br"),a("span",{staticClass:"line-number"},[n._v("112")]),a("br"),a("span",{staticClass:"line-number"},[n._v("113")]),a("br"),a("span",{staticClass:"line-number"},[n._v("114")]),a("br"),a("span",{staticClass:"line-number"},[n._v("115")]),a("br"),a("span",{staticClass:"line-number"},[n._v("116")]),a("br"),a("span",{staticClass:"line-number"},[n._v("117")]),a("br"),a("span",{staticClass:"line-number"},[n._v("118")]),a("br"),a("span",{staticClass:"line-number"},[n._v("119")]),a("br"),a("span",{staticClass:"line-number"},[n._v("120")]),a("br"),a("span",{staticClass:"line-number"},[n._v("121")]),a("br"),a("span",{staticClass:"line-number"},[n._v("122")]),a("br"),a("span",{staticClass:"line-number"},[n._v("123")]),a("br"),a("span",{staticClass:"line-number"},[n._v("124")]),a("br"),a("span",{staticClass:"line-number"},[n._v("125")]),a("br"),a("span",{staticClass:"line-number"},[n._v("126")]),a("br"),a("span",{staticClass:"line-number"},[n._v("127")]),a("br"),a("span",{staticClass:"line-number"},[n._v("128")]),a("br"),a("span",{staticClass:"line-number"},[n._v("129")]),a("br"),a("span",{staticClass:"line-number"},[n._v("130")]),a("br"),a("span",{staticClass:"line-number"},[n._v("131")]),a("br"),a("span",{staticClass:"line-number"},[n._v("132")]),a("br"),a("span",{staticClass:"line-number"},[n._v("133")]),a("br"),a("span",{staticClass:"line-number"},[n._v("134")]),a("br"),a("span",{staticClass:"line-number"},[n._v("135")]),a("br"),a("span",{staticClass:"line-number"},[n._v("136")]),a("br"),a("span",{staticClass:"line-number"},[n._v("137")]),a("br"),a("span",{staticClass:"line-number"},[n._v("138")]),a("br"),a("span",{staticClass:"line-number"},[n._v("139")]),a("br"),a("span",{staticClass:"line-number"},[n._v("140")]),a("br"),a("span",{staticClass:"line-number"},[n._v("141")]),a("br"),a("span",{staticClass:"line-number"},[n._v("142")]),a("br"),a("span",{staticClass:"line-number"},[n._v("143")]),a("br"),a("span",{staticClass:"line-number"},[n._v("144")]),a("br"),a("span",{staticClass:"line-number"},[n._v("145")]),a("br"),a("span",{staticClass:"line-number"},[n._v("146")]),a("br"),a("span",{staticClass:"line-number"},[n._v("147")]),a("br"),a("span",{staticClass:"line-number"},[n._v("148")]),a("br"),a("span",{staticClass:"line-number"},[n._v("149")]),a("br"),a("span",{staticClass:"line-number"},[n._v("150")]),a("br"),a("span",{staticClass:"line-number"},[n._v("151")]),a("br"),a("span",{staticClass:"line-number"},[n._v("152")]),a("br"),a("span",{staticClass:"line-number"},[n._v("153")]),a("br"),a("span",{staticClass:"line-number"},[n._v("154")]),a("br"),a("span",{staticClass:"line-number"},[n._v("155")]),a("br"),a("span",{staticClass:"line-number"},[n._v("156")]),a("br"),a("span",{staticClass:"line-number"},[n._v("157")]),a("br"),a("span",{staticClass:"line-number"},[n._v("158")]),a("br"),a("span",{staticClass:"line-number"},[n._v("159")]),a("br"),a("span",{staticClass:"line-number"},[n._v("160")]),a("br"),a("span",{staticClass:"line-number"},[n._v("161")]),a("br"),a("span",{staticClass:"line-number"},[n._v("162")]),a("br"),a("span",{staticClass:"line-number"},[n._v("163")]),a("br"),a("span",{staticClass:"line-number"},[n._v("164")]),a("br"),a("span",{staticClass:"line-number"},[n._v("165")]),a("br"),a("span",{staticClass:"line-number"},[n._v("166")]),a("br"),a("span",{staticClass:"line-number"},[n._v("167")]),a("br"),a("span",{staticClass:"line-number"},[n._v("168")]),a("br"),a("span",{staticClass:"line-number"},[n._v("169")]),a("br"),a("span",{staticClass:"line-number"},[n._v("170")]),a("br"),a("span",{staticClass:"line-number"},[n._v("171")]),a("br"),a("span",{staticClass:"line-number"},[n._v("172")]),a("br"),a("span",{staticClass:"line-number"},[n._v("173")]),a("br"),a("span",{staticClass:"line-number"},[n._v("174")]),a("br"),a("span",{staticClass:"line-number"},[n._v("175")]),a("br"),a("span",{staticClass:"line-number"},[n._v("176")]),a("br"),a("span",{staticClass:"line-number"},[n._v("177")]),a("br"),a("span",{staticClass:"line-number"},[n._v("178")]),a("br"),a("span",{staticClass:"line-number"},[n._v("179")]),a("br"),a("span",{staticClass:"line-number"},[n._v("180")]),a("br"),a("span",{staticClass:"line-number"},[n._v("181")]),a("br"),a("span",{staticClass:"line-number"},[n._v("182")]),a("br"),a("span",{staticClass:"line-number"},[n._v("183")]),a("br"),a("span",{staticClass:"line-number"},[n._v("184")]),a("br"),a("span",{staticClass:"line-number"},[n._v("185")]),a("br"),a("span",{staticClass:"line-number"},[n._v("186")]),a("br"),a("span",{staticClass:"line-number"},[n._v("187")]),a("br"),a("span",{staticClass:"line-number"},[n._v("188")]),a("br"),a("span",{staticClass:"line-number"},[n._v("189")]),a("br"),a("span",{staticClass:"line-number"},[n._v("190")]),a("br"),a("span",{staticClass:"line-number"},[n._v("191")]),a("br"),a("span",{staticClass:"line-number"},[n._v("192")]),a("br"),a("span",{staticClass:"line-number"},[n._v("193")]),a("br"),a("span",{staticClass:"line-number"},[n._v("194")]),a("br"),a("span",{staticClass:"line-number"},[n._v("195")]),a("br"),a("span",{staticClass:"line-number"},[n._v("196")]),a("br"),a("span",{staticClass:"line-number"},[n._v("197")]),a("br"),a("span",{staticClass:"line-number"},[n._v("198")]),a("br"),a("span",{staticClass:"line-number"},[n._v("199")]),a("br"),a("span",{staticClass:"line-number"},[n._v("200")]),a("br"),a("span",{staticClass:"line-number"},[n._v("201")]),a("br"),a("span",{staticClass:"line-number"},[n._v("202")]),a("br"),a("span",{staticClass:"line-number"},[n._v("203")]),a("br"),a("span",{staticClass:"line-number"},[n._v("204")]),a("br"),a("span",{staticClass:"line-number"},[n._v("205")]),a("br"),a("span",{staticClass:"line-number"},[n._v("206")]),a("br"),a("span",{staticClass:"line-number"},[n._v("207")]),a("br"),a("span",{staticClass:"line-number"},[n._v("208")]),a("br"),a("span",{staticClass:"line-number"},[n._v("209")]),a("br"),a("span",{staticClass:"line-number"},[n._v("210")]),a("br"),a("span",{staticClass:"line-number"},[n._v("211")]),a("br"),a("span",{staticClass:"line-number"},[n._v("212")]),a("br"),a("span",{staticClass:"line-number"},[n._v("213")]),a("br"),a("span",{staticClass:"line-number"},[n._v("214")]),a("br"),a("span",{staticClass:"line-number"},[n._v("215")]),a("br"),a("span",{staticClass:"line-number"},[n._v("216")]),a("br"),a("span",{staticClass:"line-number"},[n._v("217")]),a("br"),a("span",{staticClass:"line-number"},[n._v("218")]),a("br"),a("span",{staticClass:"line-number"},[n._v("219")]),a("br"),a("span",{staticClass:"line-number"},[n._v("220")]),a("br"),a("span",{staticClass:"line-number"},[n._v("221")]),a("br"),a("span",{staticClass:"line-number"},[n._v("222")]),a("br"),a("span",{staticClass:"line-number"},[n._v("223")]),a("br"),a("span",{staticClass:"line-number"},[n._v("224")]),a("br"),a("span",{staticClass:"line-number"},[n._v("225")]),a("br"),a("span",{staticClass:"line-number"},[n._v("226")]),a("br"),a("span",{staticClass:"line-number"},[n._v("227")]),a("br"),a("span",{staticClass:"line-number"},[n._v("228")]),a("br"),a("span",{staticClass:"line-number"},[n._v("229")]),a("br"),a("span",{staticClass:"line-number"},[n._v("230")]),a("br"),a("span",{staticClass:"line-number"},[n._v("231")]),a("br"),a("span",{staticClass:"line-number"},[n._v("232")]),a("br"),a("span",{staticClass:"line-number"},[n._v("233")]),a("br"),a("span",{staticClass:"line-number"},[n._v("234")]),a("br"),a("span",{staticClass:"line-number"},[n._v("235")]),a("br"),a("span",{staticClass:"line-number"},[n._v("236")]),a("br"),a("span",{staticClass:"line-number"},[n._v("237")]),a("br"),a("span",{staticClass:"line-number"},[n._v("238")]),a("br"),a("span",{staticClass:"line-number"},[n._v("239")]),a("br"),a("span",{staticClass:"line-number"},[n._v("240")]),a("br"),a("span",{staticClass:"line-number"},[n._v("241")]),a("br"),a("span",{staticClass:"line-number"},[n._v("242")]),a("br"),a("span",{staticClass:"line-number"},[n._v("243")]),a("br"),a("span",{staticClass:"line-number"},[n._v("244")]),a("br"),a("span",{staticClass:"line-number"},[n._v("245")]),a("br"),a("span",{staticClass:"line-number"},[n._v("246")]),a("br"),a("span",{staticClass:"line-number"},[n._v("247")]),a("br"),a("span",{staticClass:"line-number"},[n._v("248")]),a("br"),a("span",{staticClass:"line-number"},[n._v("249")]),a("br"),a("span",{staticClass:"line-number"},[n._v("250")]),a("br"),a("span",{staticClass:"line-number"},[n._v("251")]),a("br"),a("span",{staticClass:"line-number"},[n._v("252")]),a("br"),a("span",{staticClass:"line-number"},[n._v("253")]),a("br"),a("span",{staticClass:"line-number"},[n._v("254")]),a("br"),a("span",{staticClass:"line-number"},[n._v("255")]),a("br"),a("span",{staticClass:"line-number"},[n._v("256")]),a("br"),a("span",{staticClass:"line-number"},[n._v("257")]),a("br"),a("span",{staticClass:"line-number"},[n._v("258")]),a("br"),a("span",{staticClass:"line-number"},[n._v("259")]),a("br"),a("span",{staticClass:"line-number"},[n._v("260")]),a("br"),a("span",{staticClass:"line-number"},[n._v("261")]),a("br"),a("span",{staticClass:"line-number"},[n._v("262")]),a("br"),a("span",{staticClass:"line-number"},[n._v("263")]),a("br"),a("span",{staticClass:"line-number"},[n._v("264")]),a("br"),a("span",{staticClass:"line-number"},[n._v("265")]),a("br"),a("span",{staticClass:"line-number"},[n._v("266")]),a("br"),a("span",{staticClass:"line-number"},[n._v("267")]),a("br"),a("span",{staticClass:"line-number"},[n._v("268")]),a("br"),a("span",{staticClass:"line-number"},[n._v("269")]),a("br"),a("span",{staticClass:"line-number"},[n._v("270")]),a("br"),a("span",{staticClass:"line-number"},[n._v("271")]),a("br"),a("span",{staticClass:"line-number"},[n._v("272")]),a("br"),a("span",{staticClass:"line-number"},[n._v("273")]),a("br"),a("span",{staticClass:"line-number"},[n._v("274")]),a("br"),a("span",{staticClass:"line-number"},[n._v("275")]),a("br"),a("span",{staticClass:"line-number"},[n._v("276")]),a("br"),a("span",{staticClass:"line-number"},[n._v("277")]),a("br"),a("span",{staticClass:"line-number"},[n._v("278")]),a("br"),a("span",{staticClass:"line-number"},[n._v("279")]),a("br"),a("span",{staticClass:"line-number"},[n._v("280")]),a("br"),a("span",{staticClass:"line-number"},[n._v("281")]),a("br"),a("span",{staticClass:"line-number"},[n._v("282")]),a("br"),a("span",{staticClass:"line-number"},[n._v("283")]),a("br"),a("span",{staticClass:"line-number"},[n._v("284")]),a("br"),a("span",{staticClass:"line-number"},[n._v("285")]),a("br"),a("span",{staticClass:"line-number"},[n._v("286")]),a("br"),a("span",{staticClass:"line-number"},[n._v("287")]),a("br"),a("span",{staticClass:"line-number"},[n._v("288")]),a("br"),a("span",{staticClass:"line-number"},[n._v("289")]),a("br"),a("span",{staticClass:"line-number"},[n._v("290")]),a("br"),a("span",{staticClass:"line-number"},[n._v("291")]),a("br"),a("span",{staticClass:"line-number"},[n._v("292")]),a("br"),a("span",{staticClass:"line-number"},[n._v("293")]),a("br"),a("span",{staticClass:"line-number"},[n._v("294")]),a("br"),a("span",{staticClass:"line-number"},[n._v("295")]),a("br"),a("span",{staticClass:"line-number"},[n._v("296")]),a("br"),a("span",{staticClass:"line-number"},[n._v("297")]),a("br"),a("span",{staticClass:"line-number"},[n._v("298")]),a("br"),a("span",{staticClass:"line-number"},[n._v("299")]),a("br"),a("span",{staticClass:"line-number"},[n._v("300")]),a("br"),a("span",{staticClass:"line-number"},[n._v("301")]),a("br"),a("span",{staticClass:"line-number"},[n._v("302")]),a("br"),a("span",{staticClass:"line-number"},[n._v("303")]),a("br"),a("span",{staticClass:"line-number"},[n._v("304")]),a("br"),a("span",{staticClass:"line-number"},[n._v("305")]),a("br"),a("span",{staticClass:"line-number"},[n._v("306")]),a("br"),a("span",{staticClass:"line-number"},[n._v("307")]),a("br"),a("span",{staticClass:"line-number"},[n._v("308")]),a("br"),a("span",{staticClass:"line-number"},[n._v("309")]),a("br"),a("span",{staticClass:"line-number"},[n._v("310")]),a("br"),a("span",{staticClass:"line-number"},[n._v("311")]),a("br"),a("span",{staticClass:"line-number"},[n._v("312")]),a("br"),a("span",{staticClass:"line-number"},[n._v("313")]),a("br"),a("span",{staticClass:"line-number"},[n._v("314")]),a("br"),a("span",{staticClass:"line-number"},[n._v("315")]),a("br"),a("span",{staticClass:"line-number"},[n._v("316")]),a("br"),a("span",{staticClass:"line-number"},[n._v("317")]),a("br"),a("span",{staticClass:"line-number"},[n._v("318")]),a("br"),a("span",{staticClass:"line-number"},[n._v("319")]),a("br"),a("span",{staticClass:"line-number"},[n._v("320")]),a("br"),a("span",{staticClass:"line-number"},[n._v("321")]),a("br"),a("span",{staticClass:"line-number"},[n._v("322")]),a("br"),a("span",{staticClass:"line-number"},[n._v("323")]),a("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);